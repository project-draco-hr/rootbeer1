{
  List<Type> class_hierarchy=RootbeerClassLoader.v().getDfsInfo().getHierarchy(m_sootMethod.getDeclaringClass());
  for (  Type type : class_hierarchy) {
    if (type instanceof RefType == false) {
      continue;
    }
    RefType ref_type=(RefType)type;
    SootClass soot_class=ref_type.getSootClass();
    try {
      SootMethod soot_method=soot_class.getMethod(m_methodSubsignature);
      return new OpenCLPolymorphicMethod(soot_method);
    }
 catch (    RuntimeException ex) {
      continue;
    }
  }
  throw new RuntimeException("Cannot find class: " + m_methodSubsignature);
}
