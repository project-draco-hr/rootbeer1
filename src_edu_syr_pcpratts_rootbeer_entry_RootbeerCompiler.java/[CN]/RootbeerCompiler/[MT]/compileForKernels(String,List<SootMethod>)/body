{
  if (kernel_methods.isEmpty()) {
    System.out.println("There are no kernel classes. Please implement the following interface to use rootbeer:");
    System.out.println("edu.syr.pcpratts.rootbeer.runtime.Kernel");
    System.exit(0);
  }
  System.out.println("applying optimizations...");
  RootbeerClassLoader.v().applyOptimizations();
  Transform2 transform2=new Transform2();
  for (  SootMethod kernel_method : kernel_methods) {
    System.out.println("running transform2 on: " + kernel_method.getSignature() + "...");
    RootbeerClassLoader.v().loadDfsInfo(kernel_method);
    SootClass soot_class=kernel_method.getDeclaringClass();
    transform2.run(soot_class.getName());
  }
  System.out.println("writing classes out...");
  Iterator<SootClass> iter=Scene.v().getClasses().iterator();
  while (iter.hasNext()) {
    SootClass soot_class=iter.next();
    if (soot_class.isLibraryClass()) {
      System.out.println("skipping library class: " + soot_class.getName());
      continue;
    }
    String class_name=soot_class.getName();
    if (m_runtimeClasses.contains(class_name)) {
      System.out.println("skipping runtine class: " + class_name);
      continue;
    }
    System.out.println("writing class_file: " + class_name);
    writeClassFile(class_name);
    writeJimpleFile(class_name);
  }
  makeOutJar();
  pack(outname);
}
