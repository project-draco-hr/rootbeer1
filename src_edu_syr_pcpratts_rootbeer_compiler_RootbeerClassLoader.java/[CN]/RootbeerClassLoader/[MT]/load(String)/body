{
  System.out.println("Initializing RootbeerScene...");
  RootbeerScene.v().init(jar_filename);
  m_AppClasses=RootbeerScene.v().getApplicationClasses();
  System.out.println("Finding RunOnGpu Classes...");
  FindRunOnGpuClasses finder1=new FindRunOnGpuClasses();
  List<String> run_on_gpu=finder1.get(m_AppClasses);
  System.out.println("Loading Scene...");
  for (  String cls : run_on_gpu) {
    loadMethod(cls,"void gpuMethod()",true);
  }
  while (m_MethodLoadList.isEmpty() == false) {
    String method_sig=m_MethodLoadList.get(0);
    m_MethodLoadList.remove(0);
    if (m_VisitedMethods.contains(method_sig))     continue;
    m_VisitedMethods.add(method_sig);
    SignatureUtil util=new SignatureUtil();
    loadMethod(util.classFromMethodSig(method_sig),util.methodSubSigFromMethodSig(method_sig),true);
  }
  ClassRemapping remapping=new ClassRemapping();
  m_VisitedClasses.addAll(remapping.getRuntimeClasses());
  System.out.println("Loading all methods in visited classes...");
  for (int i=0; i < m_VisitedClasses.size(); ++i) {
    String cls=m_VisitedClasses.get(i);
    if (cls.equals("java.lang.Object"))     continue;
    SootClass soot_class=RootbeerScene.v().getClass(cls);
    List<SootMethod> methods=soot_class.getMethods();
    for (    SootMethod method : methods) {
      if (m_VisitedMethods.contains(method.getSignature()))       continue;
      loadMethod(cls,method.getSubSignature(),false);
    }
  }
  for (  String cls : m_AppClasses) {
    SootClass soot_class=RootbeerScene.v().getClass(cls);
    soot_class.setApplicationClass();
  }
  return run_on_gpu;
}
