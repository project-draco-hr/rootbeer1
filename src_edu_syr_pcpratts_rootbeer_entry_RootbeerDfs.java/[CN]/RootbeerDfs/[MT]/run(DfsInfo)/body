{
  m_currDfsInfo=dfs_info;
  String signature=dfs_info.getRootMethodSignature();
  Set<HierarchySignature> visited=new HashSet<HierarchySignature>();
  LinkedList<HierarchySignature> queue=new LinkedList<HierarchySignature>();
  queue.add(new HierarchySignature(signature));
  queue.add(new HierarchySignature("<java.lang.Integer: java.lang.String toString(int)>"));
  queue.add(new HierarchySignature("<java.lang.Long: java.lang.String toString(long)>"));
  queue.add(new HierarchySignature("<edu.syr.pcpratts.rootbeer.runtime.Sentinal: void <init>()>"));
  queue.add(new HierarchySignature("<edu.syr.pcpratts.rootbeer.runtimegpu.GpuException: void <init>()>"));
  queue.add(new HierarchySignature("<edu.syr.pcpratts.rootbeer.runtimegpu.GpuException: edu.syr.pcpratts.rootbeer.runtimegpu.GpuException arrayOutOfBounds(int,int,int)>"));
  visited.add(new HierarchySignature("<java.lang.StringBuilder: java.lang.StringBuilder append(double)>"));
  visited.add(new HierarchySignature("<java.lang.StringBuilder: java.lang.StringBuilder append(float)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println()>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(java.lang.String)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(boolean)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(byte)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(char)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(short)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(int)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(long)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(float)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void println(double)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void print(java.lang.String)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void print(double)>"));
  visited.add(new HierarchySignature("<java.io.PrintStream: void print(float)>"));
  while (queue.isEmpty() == false) {
    HierarchySignature curr=queue.removeFirst();
    doDfsForRootbeer(curr,queue,visited);
  }
}
