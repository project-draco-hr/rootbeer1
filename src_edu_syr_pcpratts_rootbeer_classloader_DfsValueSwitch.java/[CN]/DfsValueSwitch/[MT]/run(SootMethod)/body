{
  m_types=new HashSet<Type>();
  m_methods=new HashSet<DfsMethodRef>();
  m_fields=new HashSet<SootFieldRef>();
  m_instanceOfs=new HashSet<Type>();
  addType(method.getReturnType());
  List<Type> param_types=method.getParameterTypes();
  for (  Type param_type : param_types) {
    addType(param_type);
  }
  SootClass soot_class=method.getDeclaringClass();
  FastWholeProgram.v().getResolver().resolveClass(soot_class.getName(),SootClass.BODIES);
  if (method.isConcrete() == false) {
    return;
  }
  Body body=method.retrieveActiveBody();
  Iterator<Unit> iter=body.getUnits().iterator();
  while (iter.hasNext()) {
    m_currStmt=(Stmt)iter.next();
    List<ValueBox> boxes=m_currStmt.getUseAndDefBoxes();
    for (    ValueBox box : boxes) {
      Value value=box.getValue();
      value.apply(this);
    }
  }
}
