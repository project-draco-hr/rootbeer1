{
  BytecodeLanguage bcl=m_bcl.top();
  SootClass obj_cls=Scene.v().getSootClass("java.lang.Object");
  bcl.startMethod("doReadFromHeap",obj_cls.getType(),obj_cls.getType(),BooleanType.v(),LongType.v());
  m_thisRef=bcl.refThis();
  m_gcObjVisitor.push(m_thisRef);
  m_Param0=bcl.refParameter(0);
  m_objSerializing.push(m_Param0);
  m_Param1=bcl.refParameter(1);
  m_RefParam=bcl.refParameter(2);
  m_Mem=bcl.refInstanceField(m_thisRef,"mMem");
  m_TextureMem=bcl.refInstanceField(m_thisRef,"mTextureMem");
  String dont_return_null_label=getNextLabel();
  bcl.ifStmt(m_RefParam,"!=",LongConstant.v(-1),dont_return_null_label);
  bcl.returnValue(NullConstant.v());
  bcl.label(dont_return_null_label);
  String dont_fetch_obj=getNextLabel();
  bcl.ifStmt(m_Param0,"!=",NullConstant.v(),dont_fetch_obj);
  bcl.pushMethod(m_thisRef,"writeCacheFetch",obj_cls.getType(),LongType.v());
  Local written_to=bcl.invokeMethodRet(m_thisRef,m_RefParam);
  bcl.assign(m_Param0,written_to);
  bcl.label(dont_fetch_obj);
  Local mem=bcl.local(m_Mem.getType());
  bcl.assign(mem,m_Mem);
  m_currMem.push(mem);
  BclMemory bcl_mem=new BclMemory(m_bcl.top(),mem);
  bcl_mem.setAddress(m_RefParam);
  String null_readers=getNextLabel();
  bcl.ifStmt(m_Param0,"==",NullConstant.v(),null_readers);
  Local ret;
  SootClass string_class=Scene.v().getSootClass("java.lang.String");
  RefType string_type=string_class.getType();
  String label=getNextLabel();
  bcl.ifInstanceOfStmt(m_Param0,string_type,label);
  ret=makeReadFromHeapBodyForString(string_type);
  m_ReadFromHeapMethodsMade.put(string_type,ret);
  bcl.returnValue(ret);
  bcl.label(label);
  ArrayType array_type=ArrayType.v(CharType.v(),1);
  label=getNextLabel();
  bcl.ifInstanceOfStmt(m_Param0,array_type,label);
  ret=makeReadFromHeapBodyForArrayType(array_type);
  m_ReadFromHeapMethodsMade.put(array_type,ret);
  bcl.returnValue(ret);
  bcl.label(label);
  for (  Type type : m_OrderedHistory) {
    makeReadFromHeapMethodForType(type,false);
  }
  bcl.label(null_readers);
  makeReadForNull();
  RefType obj=RefType.v("java.lang.Object");
  makeReadFromHeapMethodForType(obj,true);
  bcl.returnValue(NullConstant.v());
  bcl.endMethod();
}
