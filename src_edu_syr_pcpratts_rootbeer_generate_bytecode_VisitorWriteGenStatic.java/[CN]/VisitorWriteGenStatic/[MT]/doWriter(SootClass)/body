{
  BytecodeLanguage bcl=m_Bcl.top();
  Local memory=m_CurrMem.top();
  Local gc_visit=m_GcObjVisitor.top();
  List<OpenCLField> static_fields=m_StaticOffsets.getStaticFields(soot_class);
  BclMemory bcl_mem=new BclMemory(bcl,memory);
  SootClass obj=Scene.v().getSootClass("java.lang.Object");
  for (  OpenCLField field : static_fields) {
    Local field_value;
    if (soot_class.isApplicationClass()) {
      field_value=bcl.refStaticField(soot_class.getType(),field.getName());
    }
 else {
      SootClass string=Scene.v().getSootClass("java.lang.String");
      SootClass cls=Scene.v().getSootClass("java.lang.Class");
      bcl.pushMethod(gc_visit,"readStaticField",obj.getType(),cls.getType(),string.getType());
      field_value=bcl.invokeMethodRet(gc_visit,ClassConstant.v(toConstant(soot_class.getName())),StringConstant.v(field.getName()));
    }
    if (field.getType().isRefType()) {
      bcl.pushMethod(gc_visit,"writeToHeap",LongType.v(),obj.getType(),BooleanType.v());
      Local ref=bcl.invokeMethodRet(gc_visit,field_value,IntConstant.v(1));
      bcl_mem.useStaticPointer();
      bcl_mem.setAddress(LongConstant.v(m_StaticOffsets.getIndex(field)));
      bcl_mem.writeRef(ref);
      bcl_mem.useInstancePointer();
    }
 else {
      bcl_mem.useStaticPointer();
      bcl_mem.setAddress(LongConstant.v(m_StaticOffsets.getIndex(field)));
      bcl_mem.writeVar(field_value);
      bcl_mem.useInstancePointer();
    }
  }
}
