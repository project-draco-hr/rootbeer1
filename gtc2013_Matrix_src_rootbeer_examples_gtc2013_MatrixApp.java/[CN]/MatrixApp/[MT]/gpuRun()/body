{
  m_gpuWatch.start();
  MatrixKernel matrix_kernel=new MatrixKernel(m_a,m_b,m_cgpu,m_blockSize,m_gridSize,m_blockIters);
  Rootbeer rootbeer=new Rootbeer();
  rootbeer.setThreadConfig(1024,m_gridSize);
  rootbeer.runAll(matrix_kernel);
  m_gpuWatch.stop();
  System.out.println("avg gpu time: " + m_gpuWatch.getAverageTime() + " ms");
  if (matrix_kernel.m_invalidRead) {
    System.out.println("  Invalid READ!");
    System.out.println("    k: " + matrix_kernel.m_invalidIndexK);
    System.out.println("    thread_row: " + matrix_kernel.m_invalidIndexRow);
    System.out.println("    thread_col: " + matrix_kernel.m_invalidIndexCol);
    System.out.println("    a_value: " + matrix_kernel.m_invalidAValue);
    System.out.println("    b_value: " + matrix_kernel.m_invalidBValue);
    System.out.println("    prev_a: " + matrix_kernel.m_invalidPrevA);
    System.out.println("    prev_b: " + matrix_kernel.m_invalidPrevB);
    System.out.println("    m: " + matrix_kernel.m_invalidIndexM);
    System.out.println("    sub_matrix_row: " + matrix_kernel.m_invalidSubMatrixRow);
    System.out.println("    sub_matrix_col: " + matrix_kernel.m_invalidSubMatrixCol);
  }
  int sum=0;
  for (  Calculation calc : matrix_kernel.m_calcs) {
    if (calc == null) {
      continue;
    }
    System.out.println("  calc:");
    System.out.println("    k: " + calc.m_invalidIndexK);
    System.out.println("    row: " + calc.m_invalidIndexRow);
    System.out.println("    col: " + calc.m_invalidIndexCol);
    System.out.println("    a_value: " + calc.m_invalidAValue);
    System.out.println("    b_value: " + calc.m_invalidBValue);
    System.out.println("    prev_a: " + calc.m_invalidPrevA);
    System.out.println("    prev_b: " + calc.m_invalidPrevB);
    System.out.println("    m: " + calc.m_invalidIndexM);
    System.out.println("    sub_matrix_row: " + calc.m_invalidSubMatrixRow);
    System.out.println("    sub_matrix_col: " + calc.m_invalidSubMatrixCol);
    sum+=(calc.m_invalidAValue * calc.m_invalidBValue);
  }
  System.out.println("SUM: " + sum);
  List<StatsRow> stats=rootbeer.getStats();
  for (  StatsRow row : stats) {
    System.out.println("  StatsRow:");
    System.out.println("    init time: " + row.getInitTime());
    System.out.println("    serial time: " + row.getSerializationTime());
    System.out.println("    exec time: " + row.getExecutionTime());
    System.out.println("    deserial time: " + row.getDeserializationTime());
    System.out.println("    num blocks: " + row.getNumBlocks());
    System.out.println("    num threads: " + row.getNumThreads());
  }
}
