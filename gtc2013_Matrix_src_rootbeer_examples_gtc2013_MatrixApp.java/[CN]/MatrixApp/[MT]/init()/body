{
  m_blockIters=256;
  m_blockSize=256;
  m_gridSize=14;
  m_a=new float[m_blockSize * m_blockSize];
  m_bcpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_bgpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_ccpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_cgpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  for (int i=0; i < m_a.length; ++i) {
    m_a[i]=i % 3;
  }
  for (int i=0; i < m_bgpu.length; ++i) {
    m_bgpu[i]=i % 3;
    m_bcpu[i]=i % 3;
  }
  m_transposeWatch.start();
  for (int i=0; i < m_bgpu.length; ++i) {
    int row=i / (m_blockSize * m_gridSize * m_blockIters);
    int col=i % (m_blockSize * m_gridSize * m_blockIters);
    System.out.println("transpose");
    System.out.println("  i: " + i);
    System.out.println("  row: " + row);
    System.out.println("  col: " + col);
    m_bcpu[col * m_blockSize + row]=m_bgpu[i];
    if (i == 10) {
      System.exit(0);
    }
  }
  m_transposeWatch.stop();
  System.out.println("transpose time: " + m_transposeWatch.getAverageTime() + " ms");
}
