{
  m_blockIters=32;
  m_blockSize=32;
  m_gridSize=2;
  m_a=new float[m_blockSize * m_blockSize];
  m_bcpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_bcpu2=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_bgpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_ccpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_ccpu2=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  m_cgpu=new float[m_blockSize * m_blockSize * m_gridSize* m_blockIters];
  for (int i=0; i < m_a.length; ++i) {
    m_a[i]=i % 3;
  }
  for (int i=0; i < m_bgpu.length; ++i) {
    m_bgpu[i]=i % 3;
    m_bcpu2[i]=i % 3;
  }
  m_transposeWatch.start();
  for (int i=0; i < m_bgpu.length; ++i) {
    int row=i / (m_blockSize * m_gridSize * m_blockIters);
    int col=i % (m_blockSize * m_gridSize * m_blockIters);
    int dest=col * m_blockSize + row;
    m_bcpu[dest]=m_bgpu[i];
  }
  m_transposeWatch.stop();
  System.out.println("transpose time: " + m_transposeWatch.getAverageTime() + " ms");
}
