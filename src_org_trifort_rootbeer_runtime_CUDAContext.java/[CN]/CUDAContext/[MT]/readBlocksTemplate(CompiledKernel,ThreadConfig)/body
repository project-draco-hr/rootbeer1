{
  m_handlesMemory.setAddress(0);
  m_exceptionsMemory.setAddress(0);
  m_exceptionsMemory.setAddress(0);
  Serializer serializer=compiled_kernel.getSerializer(m_objectMemory,m_textureMemory);
  for (int i=0; i < thread_config.getNumThreads(); ++i) {
    long ref=m_exceptionsMemory.readRef();
    if (ref != 0) {
      long ref_num=ref >> 4;
      if (ref_num == compiled_kernel.getNullPointerNumber()) {
        throw new NullPointerException();
      }
 else       if (ref_num == compiled_kernel.getOutOfMemoryNumber()) {
        throw new OutOfMemoryError();
      }
      m_objectMemory.setAddress(ref);
      Object except=serializer.readFromHeap(null,true,ref);
      if (except instanceof Error) {
        Error except_th=(Error)except;
        throw except_th;
      }
 else       if (except instanceof GpuException) {
        GpuException gpu_except=(GpuException)except;
        throw new ArrayIndexOutOfBoundsException("array_index: " + gpu_except.m_arrayIndex + " array_length: "+ gpu_except.m_arrayLength+ " array: "+ gpu_except.m_array);
      }
 else {
        throw new RuntimeException((Throwable)except);
      }
    }
  }
  serializer.readStaticsFromHeap();
  serializer.readFromHeap(compiled_kernel,true,m_handlesMemory.readRef());
  if (Configuration.getPrintMem()) {
    BufferPrinter printer=new BufferPrinter();
    printer.print(m_objectMemory,0,896);
  }
}
