{
  long freeMemSizeGPU=gpuDevice.getFreeGlobalMemoryBytes();
  long freeMemSizeCPU=Runtime.getRuntime().freeMemory();
  long freeMemSize=Math.min(freeMemSizeGPU,freeMemSizeCPU);
  freeMemSize-=cubinFileLength;
  freeMemSize-=exceptionsMemory.getSize();
  freeMemSize-=classMemory.getSize();
  freeMemSize-=2048;
  if (freeMemSize <= 0) {
    StringBuilder error=new StringBuilder();
    error.append("OutOfMemory while allocating Java CPU and GPU memory.\n");
    error.append("  Try increasing the max Java Heap Size using -Xmx and the initial Java Heap Size using -Xms.\n");
    error.append("  Try reducing the number of threads you are using.\n");
    error.append("  Try using kernel templates.\n");
    error.append("  Debugging Output:\n");
    error.append("    GPU_SIZE: " + freeMemSizeGPU + "\n");
    error.append("    CPU_SIZE: " + freeMemSizeCPU + "\n");
    error.append("    EXCEPTIONS_SIZE: " + exceptionsMemory.getSize() + "\n");
    error.append("    CLASS_MEMORY_SIZE: " + classMemory.getSize());
    throw new RuntimeException(error.toString());
  }
  memorySize=freeMemSize;
}
