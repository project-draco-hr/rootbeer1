{
  CompiledKernel compiled_kernel=(CompiledKernel)work.get(0);
  String filename;
  if (m_32bit) {
    filename=compiled_kernel.getCubin32();
  }
 else {
    filename=compiled_kernel.getCubin64();
  }
  if (filename.endsWith(".error")) {
    throw new RuntimeException("CUDA code compiled with error");
  }
  byte[] cubin_file;
  if (m_cubinFiles.containsKey(filename)) {
    cubin_file=m_cubinFiles.get(filename);
  }
 else {
    cubin_file=readCubinFile(filename);
    m_cubinFiles.put(filename,cubin_file);
  }
  m_handlesMemory=new FixedMemory(8 * work.size());
  m_exceptionsMemory=new FixedMemory(8 * work.size());
  m_classMemory=new FixedMemory(1024);
  if (m_objectMemory == null) {
    init();
  }
  writeBlocks(work);
  runBlocks(thread_config,cubin_file,compiled_kernel.getNewUsed());
  readBlocks(work);
}
