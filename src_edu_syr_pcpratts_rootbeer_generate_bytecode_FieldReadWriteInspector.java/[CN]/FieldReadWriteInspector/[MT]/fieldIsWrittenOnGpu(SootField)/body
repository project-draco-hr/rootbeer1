{
  DfsInfo dfs_info=RootbeerClassLoader.v().getDfsInfo();
  Set<SootField> reachable_fields=dfs_info.getFields();
  if (reachable_fields.contains(soot_field) == false) {
    return false;
  }
  if (mWrittenOnGpuFields.contains(soot_field))   return true;
  if (soot_field.getDeclaringClass().getName().equals("java.lang.String"))   return true;
  OpenCLType type=new OpenCLType(soot_field.getType());
  if (type.isRefType() == false)   return false;
  Type soot_type=soot_field.getType();
  if (soot_type instanceof ArrayType) {
    ArrayType atype=(ArrayType)soot_type;
    Type base_type=atype.baseType;
    type=new OpenCLType(base_type);
    if (type.isRefType() == false)     return false;
    soot_type=base_type;
  }
  SootClass soot_class=Scene.v().getSootClass(soot_type.toString());
  if (mWritenOnGpuFieldsClassesChecked.contains(soot_type.toString()))   return false;
  mWritenOnGpuFieldsClassesChecked.add(soot_type.toString());
  List<Type> hierarchy=RootbeerClassLoader.v().getDfsInfo().getHierarchy(soot_class);
  for (  Type curr_type : hierarchy) {
    if (curr_type instanceof RefType == false) {
      continue;
    }
    RefType ref_type=(RefType)curr_type;
    SootClass curr_class=ref_type.getSootClass();
    Chain<SootField> fields=curr_class.getFields();
    for (    SootField field : fields) {
      if (fieldIsWrittenOnGpu(field)) {
        return true;
      }
    }
  }
  return false;
}
