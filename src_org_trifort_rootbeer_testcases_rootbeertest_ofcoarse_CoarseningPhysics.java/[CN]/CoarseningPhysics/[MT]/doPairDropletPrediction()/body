{
  for (int i=0; i < mPrevDroplets.size(); ++i) {
    Droplet drop1=mPrevDroplets.get(i);
    if (drop1.getVolume() < 0.000000001)     continue;
    for (int j=i + 1; j < mPrevDroplets.size(); ++j) {
      Droplet drop2=mPrevDroplets.get(j);
      if (drop2.getVolume() < 0.000000001)       continue;
      double drop1_volume;
      double drop2_volume;
      if (pastAgeStep(drop1.getCenter(),drop2.getCenter())) {
        drop1_volume=drop1.getVolume();
        drop2_volume=drop2.getVolume();
      }
 else {
        drop1_volume=volume_update_drop1(drop1.getVolume(),drop2.getVolume(),drop1.getCenter(),drop2.getCenter());
        drop2_volume=volume_update_drop2(drop1.getVolume(),drop2.getVolume(),drop1_volume);
      }
      if (drop1_volume <= 0.000000001) {
        continue;
      }
      if (drop2_volume <= 0.000000001) {
        continue;
      }
      if (dropletsTooClose(drop1.getCenter(),drop2.getCenter())) {
        continue;
      }
      Point drop1_center=center_update_drop1(drop1.getCenter(),drop2.getCenter(),drop1.getVolume(),drop1_volume);
      Point drop2_center=center_update_drop2(drop1.getCenter(),drop2.getCenter(),drop1.getVolume(),drop1_volume,drop2.getVolume());
      drop1.addNextData(drop1_center,drop1_volume);
      drop2.addNextData(drop2_center,drop2_volume);
    }
  }
}
