{
  LoadTestSerialization loader=new LoadTestSerialization();
  List<TestSerialization> creators=loader.load(cls_loader,"edu.syr.pcpratts.rootbeer.test.Main",run_hard_tests);
  List<TestException> ex_creators=loader.loadException(cls_loader,"edu.syr.pcpratts.rootbeer.test.ExMain");
  List<TestSerialization> change_thread=loader.load(cls_loader,"edu.syr.pcpratts.rootbeer.test.ChangeThread",run_hard_tests);
  List<TestKernelTemplate> kernel_template_creators=loader.loadKernelTemplate(cls_loader,"edu.syr.pcpratts.rootbeer.test.KernelTemplateMain");
  List<TestApplication> application_creators=loader.loadApplication(cls_loader,"edu.syr.pcpratts.rootbeer.test.ApplicationMain");
  int num_tests=creators.size() + ex_creators.size() + change_thread.size()+ kernel_template_creators.size()+ application_creators.size();
  int test_num=1;
  for (  TestSerialization creator : creators) {
    System.out.println("[TEST " + test_num + "/"+ num_tests+ "] "+ creator.toString());
    test(creator,false);
    ForceGC.gc();
    if (m_passed) {
      System.out.println("  PASSED");
      System.out.println("  Cpu time: " + m_cpuTime + " ms");
      System.out.println("  Gpu time: " + m_gpuTime + " ms");
    }
 else {
      System.out.println("  FAILED");
      System.out.println("  " + m_message);
      m_failedTests.add(creator.toString());
    }
    ++test_num;
  }
  for (  TestException ex_creator : ex_creators) {
    System.out.println("[TEST " + test_num + "/"+ num_tests+ "] "+ ex_creator.toString());
    ex_test(ex_creator,false);
    if (m_passed) {
      System.out.println("  PASSED");
    }
 else {
      System.out.println("  FAILED");
      System.out.println("  " + m_message);
      m_failedTests.add(ex_creator.toString());
    }
    ++test_num;
  }
  for (  TestSerialization creator : change_thread) {
    System.out.println("[TEST " + test_num + "/"+ num_tests+ "] "+ creator.toString());
    testChangeThread(creator,false);
    if (m_passed) {
      System.out.println("  PASSED");
      System.out.println("  Cpu time: " + m_cpuTime + " ms");
      System.out.println("  Gpu time: " + m_gpuTime + " ms");
    }
 else {
      System.out.println("  FAILED");
      System.out.println("  " + m_message);
      m_failedTests.add(creator.toString());
    }
    ++test_num;
  }
  for (  TestKernelTemplate kernel_template : kernel_template_creators) {
    System.out.println("[TEST " + test_num + "/"+ num_tests+ "] "+ kernel_template.toString());
    test(kernel_template,false);
    ForceGC.gc();
    if (m_passed) {
      System.out.println("  PASSED");
      System.out.println("  Cpu time: " + m_cpuTime + " ms");
      System.out.println("  Gpu time: " + m_gpuTime + " ms");
    }
 else {
      System.out.println("  FAILED");
      System.out.println("  " + m_message);
      m_failedTests.add(kernel_template.toString());
    }
    ++test_num;
  }
  for (  TestApplication application : application_creators) {
    System.out.println("[TEST " + test_num + "/"+ num_tests+ "] "+ application.toString());
    if (application.test()) {
      System.out.println("  PASSED");
    }
 else {
      System.out.println("  FAILED");
      System.out.println("  " + application.errorMessage());
      m_failedTests.add(application.toString());
    }
    ++test_num;
  }
  int test_passed=num_tests - m_failedTests.size();
  System.out.println(test_passed + "/" + num_tests+ " tests PASS");
  if (test_passed == num_tests) {
    System.out.println("ALL TESTS PASS!");
  }
 else {
    System.out.println("Failing tests:");
    for (    String failure : m_failedTests) {
      System.out.println("  " + failure);
    }
  }
}
