{
  compressMap=new HashMap<String,String>();
  compressNumber=1;
  put("__global__");
  put("__device__");
  put("__shared__");
  put("char");
  put("int");
  put("boolean");
  put("short");
  put("long");
  put("float");
  put("double");
  put("void");
  put("unsigned");
  put("signed");
  put("return");
  put("goto");
  put("if");
  put("for");
  put("break");
  put("continue");
  put("else");
  put("#define");
  put("typedef");
  put("switch");
  put("while");
  put("case");
  put("default");
  put("sizeof");
  put("entry");
  put("barrier");
  put("CLK_GLOBAL_MEM_FENCE");
  put("#ifndef");
  put("#ifdef");
  put("#endif");
  put("atomicMax");
  put("atomicExch");
  put("atomicAdd");
  put("__syncthreads");
  put("blockIdx");
  put("blockDim");
  put("threadIdx");
  put("x");
  compressMap.put("true","1");
  compressMap.put("false","0");
  compressMap.put("bool","int");
  put("abs");
  put("acos");
  put("asin");
  put("atan");
  put("atan2");
  put("cbrt");
  put("ceil");
  put("cos");
  put("cosh");
  put("exp");
  put("expm1");
  put("floor");
  put("IEEEremainder");
  put("log");
  put("log10");
  put("log1p");
  put("max");
  put("min");
  put("pow");
  put("random");
  put("rint");
  put("round");
  put("signum");
  put("sin");
  put("sigh");
  put("sqrt");
  put("tan");
  put("tanh");
  put("toDegrees");
  put("toRadians");
  put("ulp");
}
