{
  MethodSignatureUtil util=new MethodSignatureUtil();
  final String soot_class_str=util.classFromSig(method_signature);
  if (m_resolvedMethods.contains(method_signature)) {
    return m_resolver.resolveMethod(method_signature);
  }
  m_resolvedMethods.add(method_signature);
  SootClass soot_class=m_resolver.resolveClass(soot_class_str,SootClass.BODIES);
  SootMethod curr=m_resolver.resolveMethod(method_signature);
  if (curr == null || curr.isConcrete() == false) {
    return null;
  }
  SootClass actual_class=curr.getDeclaringClass();
  if (force_resolve) {
    m_resolver.forceResolveClass(actual_class.getName(),SootClass.BODIES);
  }
 else {
    m_resolver.resolveClass(actual_class.getName(),SootClass.BODIES);
  }
  return curr;
}
