{
  if (type instanceof ArrayType == false && type instanceof RefType == false) {
    return;
  }
  if (m_getSizeMethodsMade.contains(type))   return;
  m_getSizeMethodsMade.add(type);
  if (type instanceof RefType) {
    RefType ref_type=(RefType)type;
    SootClass soot_class=ref_type.getSootClass();
    if (soot_class.getName().equals("java.lang.Object"))     return;
    if (soot_class.isInterface()) {
      return;
    }
    if (differentPackageAndPrivate(ref_type)) {
      return;
    }
  }
  if (typeIsPublic(type) == false)   return;
  String label=getNextLabel();
  m_bcl.top().ifInstanceOfStmt(m_param0,type,label);
  if (type instanceof ArrayType) {
    ArrayType atype=(ArrayType)type;
    Local size=m_bcl.top().local(IntType.v());
    m_bcl.top().assign(size,IntConstant.v(Constants.ArrayOffsetSize));
    Local element_size=m_bcl.top().local(IntType.v());
    OpenCLType ocl_type=new OpenCLType(atype.baseType);
    if (atype.numDimensions == 1)     m_bcl.top().assign(element_size,IntConstant.v(ocl_type.getSize()));
 else     m_bcl.top().assign(element_size,IntConstant.v(4));
    Local object_to_write_from=m_bcl.top().cast(type,m_param0);
    Local length=m_bcl.top().lengthof(object_to_write_from);
    m_bcl.top().mult(element_size,length);
    m_bcl.top().plus(size,element_size);
    m_bcl.top().returnValue(size);
  }
 else   if (type instanceof RefType) {
    RefType rtype=(RefType)type;
    OpenCLClass ocl_class=OpenCLScene.v().getOpenCLClass(rtype.getSootClass());
    int size=ocl_class.getSize();
    m_bcl.top().returnValue(IntConstant.v(size));
  }
  m_bcl.top().label(label);
}
