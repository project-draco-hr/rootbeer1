{
  m_usesGarbageCollector=false;
  findAllUsedClassesMethodsFieldsAndArrayTypes();
  StringBuilder ret=new StringBuilder();
  ret.append(headerString());
  ret.append(garbageCollectorString());
  ret.append(methodPrototypesString());
  ret.append(methodBodiesString());
  String prev_hash="";
  String curr_hash=DigestUtils.md5Hex(ret.toString());
  while (prev_hash.equals(curr_hash) == false) {
    ret=new StringBuilder();
    ret.append(headerString());
    ret.append(garbageCollectorString());
    ret.append(methodPrototypesString());
    ret.append(methodBodiesString());
    prev_hash=curr_hash;
    curr_hash=DigestUtils.md5Hex(ret.toString());
  }
  String cuda_code;
  if (true) {
    cuda_code=ret.toString();
  }
 else {
    cuda_code=readCudaCodeFromFile();
  }
  String mangle=NameMangling.v().mangle(VoidType.v());
  String replacement=getRuntimeBasicBlockClassName() + "_gpuMethod" + mangle;
  replacement=replacement.replace("$","\\$");
  cuda_code=cuda_code.replaceAll("%%invoke_run%%",replacement);
  PrintWriter writer=new PrintWriter(new FileWriter("generated.cu"));
  writer.println(cuda_code.toString());
  writer.flush();
  writer.close();
  return cuda_code;
}
