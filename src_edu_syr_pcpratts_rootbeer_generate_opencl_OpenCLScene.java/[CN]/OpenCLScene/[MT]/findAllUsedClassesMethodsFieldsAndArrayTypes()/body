{
  FindMethodsFieldsAndArrayTypes.reset();
  addBuiltinRequirements();
  Set<SootMethod> dfs_methods=FastWholeProgram.v().getDfsMethods(m_codeSegment.getRootMethod());
  Iterator<SootMethod> iter=dfs_methods.iterator();
  while (iter.hasNext()) {
    SootMethod curr=iter.next();
    addMethod(curr);
  }
  m_codeSegment.findAllUsedMethodsAndFields();
  int prev_size=0;
  List<OpenCLMethod> all_methods=m_methodHierarchies.getMethods();
  while (prev_size != all_methods.size()) {
    prev_size=all_methods.size();
    all_methods=m_methodHierarchies.getMethods();
    for (    OpenCLMethod method : all_methods) {
      method.findAllUsedMethodsAndFields();
    }
  }
  m_codeSegment.findAllUsedArrayTypes();
  all_methods=m_methodHierarchies.getMethods();
  for (  OpenCLMethod method : all_methods) {
    method.findAllUsedArrayTypes();
  }
  m_typeHistory=new TypeHistory(m_codeSegment.getRootSootClass());
  List<Type> scene_types=OpenCLScene.v().getTypes();
  for (  Type scene_type : scene_types) {
    m_typeHistory.addType(scene_type);
  }
}
