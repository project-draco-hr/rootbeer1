{
  m_readBlocksStopwatch.start();
  m_ToSpace.get(0).setAddress(0);
  m_ExceptionHandles.activate();
  if (Configuration.getPrintMem()) {
    BufferPrinter printer=new BufferPrinter();
    printer.print(m_ToSpace.get(0),0,2048);
  }
  for (int i=0; i < m_NumThreads; ++i) {
    long ref=m_ExceptionHandles.readLong();
    if (ref != 0) {
      long ref_num=ref >> 4;
      if (ref_num == m_FirstJob.getNullPointerNumber()) {
        throw new NullPointerException();
      }
 else       if (ref_num == m_FirstJob.getOutOfMemoryNumber()) {
        throw new OutOfMemoryError();
      }
      Memory mem=m_ToSpace.get(0);
      Memory texture_mem=m_Texture.get(0);
      Serializer visitor=m_serializers.get(0);
      mem.setAddress(ref);
      Object except=visitor.readFromHeap(null,true,ref);
      if (except instanceof Error) {
        Error except_th=(Error)except;
        throw except_th;
      }
 else {
        throw new RuntimeException((Throwable)except);
      }
    }
  }
  m_serializers.get(0).readStaticsFromHeap();
  Serializer visitor=m_serializers.get(0);
  long handle=m_HandlesCache.get(0);
  List<Long> handles=new ArrayList<Long>();
  handles.add(handle);
  List<Kernel> jobs=new ArrayList<Kernel>();
  jobs.add(kernel);
  m_Readers.get(0).read(jobs,handles,visitor);
  m_Readers.get(0).join();
  m_readBlocksStopwatch.stop();
  m_deserializationTime=m_readBlocksStopwatch.elapsedTimeMillis();
}
