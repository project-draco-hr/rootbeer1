{
  if (Configuration.getPrintMem()) {
    BufferPrinter printer1=new BufferPrinter();
    printer1.print(mToSpaceMemory,0,1024);
  }
  CompiledKernel first_block=(CompiledKernel)kernel_template;
  Stopwatch watch=new Stopwatch();
  watch.start();
  mHandlesMemory.setAddress(0);
  mToSpaceMemory.setAddress(0);
  mGcObjectVisitor.readStaticsFromHeap();
  mExceptionsMemory.setAddress(0);
  for (int i=0; i < m_CountWritten; ++i) {
    long ref=mExceptionsMemory.readLong();
    if (ref != 0) {
      long ref_num=ref >> 4;
      if (ref_num == first_block.getNullPointerNumber()) {
        throw new NullPointerException();
      }
 else       if (ref_num == first_block.getOutOfMemoryNumber()) {
        throw new OutOfMemoryError();
      }
      mToSpaceMemory.setAddress(ref_num);
      Object except=mGcObjectVisitor.readFromHeap(null,true,ref_num);
      if (except instanceof Error) {
        Error except_th=(Error)except;
        throw except_th;
      }
 else       if (except instanceof RuntimeException) {
        RuntimeException runtime_ex=(RuntimeException)except;
        throw runtime_ex;
      }
 else       if (except instanceof GpuException) {
        GpuException gpu_except=(GpuException)except;
        System.out.println("array: " + gpu_except.m_array);
        System.out.println("index: " + gpu_except.m_arrayIndex);
        System.out.println("length: " + gpu_except.m_arrayLength);
        System.exit(1);
      }
 else {
        throw new RuntimeException((Throwable)except);
      }
    }
  }
  long reference=m_HandlesList.get(0);
  mToSpaceMemory.setAddress(reference);
  mGcObjectVisitor.readFromHeap(kernel_template,true,reference);
  mHandlesMemory.finishRead();
  mToSpaceMemory.finishRead();
  if (mUsingGarbageCollector) {
    mToHandleMapMemory.finishRead();
  }
}
