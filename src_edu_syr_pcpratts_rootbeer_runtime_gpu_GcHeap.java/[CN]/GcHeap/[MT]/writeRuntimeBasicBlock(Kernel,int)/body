{
  Stopwatch watch=new Stopwatch();
  watch.start();
  mBlocks=new ArrayList<CompiledKernel>();
  m_HandlesList.clear();
  CompiledKernel first_block=(CompiledKernel)kernel_template;
  mUsingGarbageCollector=false;
  mGcObjectVisitor=first_block.getSerializer(mToSpaceMemory,mTextureMemory);
  mHeapEndPtrMemory.setAddress(0);
  mHandlesMemory.setAddress(0);
  mToSpaceMemory.setAddress(0);
  mToSpaceMemory.clearHeapEndPtr();
  if (mUsingGarbageCollector) {
    makeSureReadyForUsingGarbageCollector();
  }
  mGcObjectVisitor.writeStaticsToHeap();
  m_PreviousRef=0;
  m_PreviousSize=0;
  m_CountWritten=1;
  mMaxToHandleMapAddress=-1;
  writeOneRuntimeBasicBlock(first_block);
  for (int i=1; i < num_threads; ++i) {
    m_HandlesList.add(m_PreviousRef);
  }
  long heap_end_ptr=mToSpaceMemory.getHeapEndPtr();
  mHeapEndPtrMemory.writeLong(heap_end_ptr);
  mToSpaceMemory.finishCopy(mToSpaceMemory.getHeapEndPtr());
  mHandlesMemory.finishCopy(m_CountWritten * 8);
  if (mUsingGarbageCollector) {
    mToHandleMapMemory.finishCopy(mMaxToHandleMapAddress);
  }
  mHeapEndPtrMemory.finishCopy(8);
  if (Configuration.getPrintMem()) {
    BufferPrinter printer=new BufferPrinter();
    printer.print(mToSpaceMemory,0,1024);
  }
  return m_CountWritten;
}
