{
  while (true) {
    while (!compute) {
      try {
        sleep(1000);
      }
 catch (      InterruptedException ex) {
      }
    }
    for (int x=0; x < w; ++x) {
      double xr=0;
      double xi=0;
      double cr=(maxx - minx) * x / w + minx;
      double ci=(maxy - miny) * y / h + miny;
      int d=0;
      while (true) {
        double xr2=xr * xr - xi * xi + cr;
        double xi2=2.0f * xr * xi + ci;
        xr=xr2;
        xi=xi2;
        d++;
        if (d >= maxdepth) {
          break;
        }
        if (xr * xr + xi * xi >= 4) {
          break;
        }
      }
      int r=(int)(0xff * (Math.sin((double)(0.01 * d + 0) + 1)) / 2);
      int g=(int)(0xff * (Math.sin((double)(0.02 * d + 0.01) + 1)) / 2);
      int b=(int)(0xff * (Math.sin((double)(0.04 * d + 0.1) + 1)) / 2);
      int dest_index=y * w + x;
      pixels[dest_index]=(r << 16) | (g << 8) | b;
    }
    compute=false;
  }
}
