{
  File code_file=new File(RootbeerPaths.v().getRootbeerHome() + "code_file.ptx");
  String modelString=m32 ? "-m32" : "-m64";
  String command;
  if (File.separator.equals("/")) {
    command=cuda_path.get() + "/nvcc " + modelString+ " "+ gencode_options+ " -fatbin "+ generated.getAbsolutePath()+ " -o "+ code_file.getAbsolutePath();
    CompilerRunner runner=new CompilerRunner();
    List<String> errors=runner.run(command);
    if (errors.isEmpty() == false) {
      return new CompileResult(m32,null,errors);
    }
  }
 else {
    WindowsCompile compile=new WindowsCompile();
    String nvidia_path=cuda_path.get();
    command="\"" + nvidia_path + "\" "+ gencode_options+ " -fatbin \""+ generated.getAbsolutePath()+ "\" -o \""+ code_file.getAbsolutePath()+ "\""+ compile.endl();
    List<String> errors=compile.compile(command);
    if (errors.isEmpty() == false) {
      return new CompileResult(m32,null,errors);
    }
  }
  List<byte[]> file_contents;
  try {
    file_contents=readFile(code_file);
  }
 catch (  FileNotFoundException ex) {
    file_contents=new ArrayList<byte[]>();
    ex.printStackTrace();
  }
  return new CompileResult(m32,file_contents,new ArrayList<String>());
}
