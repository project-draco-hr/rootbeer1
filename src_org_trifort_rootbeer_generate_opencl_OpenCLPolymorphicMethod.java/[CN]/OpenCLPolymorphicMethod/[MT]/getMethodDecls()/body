{
  if (shouldOutput() == false) {
    return new ArrayList<String>();
  }
  List<SootMethod> virtual_methods=getVirtualMethods();
  List<String> ret=new ArrayList<String>();
  for (  SootMethod virtual_method : virtual_methods) {
    SootClass soot_class=virtual_method.getDeclaringClass();
    OpenCLMethod ocl_method=new OpenCLMethod(m_sootMethod,soot_class);
    StringBuilder builder=new StringBuilder();
    builder.append(Tweaks.v().getDeviceFunctionQualifier() + " ");
    builder.append(ocl_method.getReturnString());
    builder.append(" invoke_" + ocl_method.getPolymorphicName());
    builder.append(ocl_method.getArgumentListStringPolymorphic());
    ret.add(builder.toString());
  }
  return ret;
}
