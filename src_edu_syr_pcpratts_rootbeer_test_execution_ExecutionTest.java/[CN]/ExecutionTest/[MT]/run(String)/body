{
  try {
    RootbeerCompiler compiler=new RootbeerCompiler();
    String dest_jar="output.jar";
    compiler.compile(jar_file,dest_jar);
    JarClassLoader loader_factory=new JarClassLoader(dest_jar);
    ClassLoader cls_loader=loader_factory.getLoader();
    Thread.currentThread().setContextClassLoader(cls_loader);
    System.out.println("Running execution test");
    LoadTestSerialization loader=new LoadTestSerialization();
    List<TestSerialization> creators=loader.load(cls_loader,"rootbeertest.Main");
    for (    TestSerialization creator : creators) {
      System.out.println("Testing: " + creator.toString() + "...");
      boolean ret=test(creator);
      if (ret) {
        System.out.println("PASSED");
      }
 else {
        System.out.println("FAILED");
        return false;
      }
    }
    List<TestException> ex_creators;
    try {
      ex_creators=loader.loadException(cls_loader,"rootbeertest.ExMain");
      for (      TestException ex_creator : ex_creators) {
        System.out.println("Testing: " + ex_creator.toString() + "...");
        boolean ret=test(ex_creator);
        if (ret) {
          System.out.println("PASSED");
        }
 else {
          System.out.println("FAILED");
          return false;
        }
      }
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
    List<TestSerialization> perf_creators;
    try {
      perf_creators=loader.load(cls_loader,"rootbeertest.PerformanceTests");
      for (      TestSerialization creator : perf_creators) {
        System.out.println("Testing: " + creator.toString() + "...");
        boolean ret=test(creator);
        if (ret) {
          System.out.println("PASSED");
        }
 else {
          System.out.println("FAILED");
          return false;
        }
      }
    }
 catch (    Exception ex) {
      ex.printStackTrace();
    }
    return true;
  }
 catch (  Exception ex) {
    ex.printStackTrace();
    return false;
  }
}
