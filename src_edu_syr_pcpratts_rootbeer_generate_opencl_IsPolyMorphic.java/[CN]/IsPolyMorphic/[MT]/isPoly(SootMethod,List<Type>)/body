{
  String name=soot_method.getName();
  if (name.equals("<init>") || name.equals("<clinit>")) {
    return false;
  }
  if (soot_method.isAbstract()) {
    return true;
  }
  MethodSignatureUtil util=new MethodSignatureUtil();
  util.parse(soot_method.getSignature());
  List<Type> params=util.getParameterTypesTyped();
  int count=0;
  for (  Type type : hierarchy) {
    if (type instanceof RefType == false) {
      continue;
    }
    RefType ref_type=(RefType)type;
    SootClass curr=ref_type.getSootClass();
    if (curr.declaresMethod(name,params)) {
      count++;
    }
  }
  if (count >= 2) {
    return true;
  }
  return false;
}
