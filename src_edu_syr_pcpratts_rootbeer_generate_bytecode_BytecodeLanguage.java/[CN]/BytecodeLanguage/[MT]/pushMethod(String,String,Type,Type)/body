{
  SootClass soot_class=RootbeerScene.v().getClass(class_name);
  SootClass org_class=soot_class;
  List<Type> args=convertTypeArrayToList(arg_types);
  SootMethod soot_method;
  while (true) {
    try {
      soot_method=soot_class.getMethod(method_name,args,return_type);
      mMethodStack.push(soot_method);
      return;
    }
 catch (    RuntimeException ex) {
      try {
        if (soot_class.hasSuperclass()) {
          soot_class=soot_class.getSuperclass();
        }
 else         if (soot_class.hasOuterClass()) {
          soot_class=soot_class.getOuterClass();
        }
 else {
          throw new RuntimeException("no upper class");
        }
        soot_class=RootbeerScene.v().getClass(soot_class.getName());
      }
 catch (      RuntimeException ex1) {
        System.out.println(class_name + ": " + method_name);
        System.out.println("Args:");
        for (        Type arg : args) {
          System.out.println(arg.toString());
        }
        ex1.printStackTrace();
        System.exit(-1);
      }
    }
  }
}
