{
  m_Hierarchy=new ArrayList<TreeNode>();
  m_Classes=classes;
  addClass("java.lang.String");
  Set<String> key_set=classes.keySet();
  Set<String> visited=new HashSet<String>();
  for (  String key : key_set) {
    OpenCLClass ocl_class=classes.get(key);
    SootClass soot_class=Scene.v().getSootClass(ocl_class.getJavaName());
    if (soot_class.hasSuperclass() == false)     continue;
    SootClass parent=soot_class.getSuperclass();
    if (parent.getName().equals("java.lang.Object")) {
      TreeNode tree=new TreeNode(soot_class,ocl_class);
      m_Hierarchy.add(tree);
      visited.add(key);
    }
  }
  boolean modified;
  do {
    modified=false;
    key_set=classes.keySet();
    for (    String key : key_set) {
      if (visited.contains(key))       continue;
      OpenCLClass ocl_class=classes.get(key);
      SootClass soot_class=Scene.v().getSootClass(ocl_class.getJavaName());
      if (soot_class.hasSuperclass() == false)       continue;
      SootClass parent=soot_class.getSuperclass();
      TreeNode node=getNode(parent);
      if (node == null)       continue;
      node.addChild(soot_class,ocl_class);
      modified=true;
      visited.add(key);
    }
  }
 while (modified);
}
